// Code generated by protoc-gen-go.
// source: time.proto
// DO NOT EDIT!

/*
Package time is a generated protocol buffer package.

It is generated from these files:
	time.proto

It has these top-level messages:
	Empty
	Time
*/
package time

import proto "github.com/golang/protobuf/proto"
import fmt "fmt"
import math "math"

import (
	context "golang.org/x/net/context"
	grpc "google.golang.org/grpc"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
const _ = proto.ProtoPackageIsVersion1

type Empty struct {
}

func (m *Empty) Reset()                    { *m = Empty{} }
func (m *Empty) String() string            { return proto.CompactTextString(m) }
func (*Empty) ProtoMessage()               {}
func (*Empty) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{0} }

type Time struct {
	Time string `protobuf:"bytes,1,opt,name=time" json:"time,omitempty"`
}

func (m *Time) Reset()                    { *m = Time{} }
func (m *Time) String() string            { return proto.CompactTextString(m) }
func (*Time) ProtoMessage()               {}
func (*Time) Descriptor() ([]byte, []int) { return fileDescriptor0, []int{1} }

func init() {
	proto.RegisterType((*Empty)(nil), "time.Empty")
	proto.RegisterType((*Time)(nil), "time.Time")
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion1

// Client API for GetTime service

type GetTimeClient interface {
	Get(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Time, error)
}

type getTimeClient struct {
	cc *grpc.ClientConn
}

func NewGetTimeClient(cc *grpc.ClientConn) GetTimeClient {
	return &getTimeClient{cc}
}

func (c *getTimeClient) Get(ctx context.Context, in *Empty, opts ...grpc.CallOption) (*Time, error) {
	out := new(Time)
	err := grpc.Invoke(ctx, "/time.GetTime/get", in, out, c.cc, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// Server API for GetTime service

type GetTimeServer interface {
	Get(context.Context, *Empty) (*Time, error)
}

func RegisterGetTimeServer(s *grpc.Server, srv GetTimeServer) {
	s.RegisterService(&_GetTime_serviceDesc, srv)
}

func _GetTime_Get_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error) (interface{}, error) {
	in := new(Empty)
	if err := dec(in); err != nil {
		return nil, err
	}
	out, err := srv.(GetTimeServer).Get(ctx, in)
	if err != nil {
		return nil, err
	}
	return out, nil
}

var _GetTime_serviceDesc = grpc.ServiceDesc{
	ServiceName: "time.GetTime",
	HandlerType: (*GetTimeServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "get",
			Handler:    _GetTime_Get_Handler,
		},
	},
	Streams: []grpc.StreamDesc{},
}

var fileDescriptor0 = []byte{
	// 104 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0xe2, 0xe2, 0x2a, 0xc9, 0xcc, 0x4d,
	0xd5, 0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x17, 0x62, 0x01, 0xb1, 0x95, 0xd8, 0xb9, 0x58, 0x5d, 0x73,
	0x0b, 0x4a, 0x2a, 0x95, 0xa4, 0xb8, 0x58, 0x42, 0x80, 0x02, 0x42, 0x42, 0x5c, 0x60, 0x09, 0x09,
	0x46, 0x05, 0x46, 0x0d, 0xce, 0x20, 0x30, 0xdb, 0x48, 0x9b, 0x8b, 0xdd, 0x3d, 0xb5, 0x04, 0x2c,
	0xad, 0xc0, 0xc5, 0x9c, 0x9e, 0x5a, 0x22, 0xc4, 0xad, 0x07, 0x36, 0x09, 0xac, 0x55, 0x8a, 0x0b,
	0xc2, 0x01, 0xc9, 0x2b, 0x31, 0x24, 0xb1, 0x81, 0x8d, 0x37, 0x06, 0x04, 0x00, 0x00, 0xff, 0xff,
	0x5b, 0x3e, 0x4f, 0x38, 0x6c, 0x00, 0x00, 0x00,
}
